{"ast":null,"code":"import _regeneratorRuntime from\"/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import YouTube from\"react-youtube\";import tmdbApi from\"../axios\";import{getYoutubeId}from\"../getYoutubeId\";import\"../Row.css\";var baseUrl=\"https://image.tmdb.org/t/p/original/\";var trailerOptions={height:\"390px\",width:\"100%\",playerVars:{// https://developers.google.com/youtube/player_parameters\nautoplay:1}};var Row=function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return tmdbApi.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[fetchUrl]);var handleClick=function handleClick(movie){getYoutubeId(movie,trailerUrl,setTrailerUrl);};var renderMovies=function renderMovies(){return movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{className:\"row__poster \".concat(isLargeRow&&\"row__posterLarge\"),src:\"\".concat(baseUrl).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name,onClick:function onClick(){return handleClick(movie);}},movie.id);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:renderMovies()}),trailerUrl&&/*#__PURE__*/_jsx(YouTube,{videoId:trailerUrl,opts:trailerOptions,className:\"row__trailer\"})]});};export default Row;","map":{"version":3,"sources":["/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/src/components/Row.js"],"names":["React","useState","useEffect","YouTube","tmdbApi","getYoutubeId","baseUrl","trailerOptions","height","width","playerVars","autoplay","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","get","request","data","results","handleClick","movie","renderMovies","map","poster_path","backdrop_path","name","id"],"mappings":"4oBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CAEA,OAASC,YAAT,KAA6B,iBAA7B,CAEA,MAAO,YAAP,CAEA,GAAMC,CAAAA,OAAO,CAAG,sCAAhB,CACA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,MAAM,CAAE,OADa,CAErBC,KAAK,CAAE,MAFc,CAGrBC,UAAU,CAAE,CACV;AACAC,QAAQ,CAAE,CAFA,CAHS,CAAvB,CASA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAqC,IAAlCC,CAAAA,KAAkC,MAAlCA,KAAkC,CAA3BC,QAA2B,MAA3BA,QAA2B,CAAjBC,UAAiB,MAAjBA,UAAiB,eACnBd,QAAQ,CAAC,EAAD,CADW,wCACxCe,MADwC,eAChCC,SADgC,8BAEXhB,QAAQ,CAAC,EAAD,CAFG,yCAExCiB,UAFwC,eAE5BC,aAF4B,eAI/CjB,SAAS,CAAC,UAAM,CACd,GAAMkB,CAAAA,SAAS,2FAAG,qKACMhB,CAAAA,OAAO,CAACiB,GAAR,CAAYP,QAAZ,CADN,QACVQ,OADU,eAEhBL,SAAS,CAACK,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFgB,gCAGTF,OAHS,wDAAH,kBAATF,CAAAA,SAAS,2CAAf,CAKAA,SAAS,GACV,CAPQ,CAON,CAACN,QAAD,CAPM,CAAT,CASA,GAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7BrB,YAAY,CAACqB,KAAD,CAAQR,UAAR,CAAoBC,aAApB,CAAZ,CACD,CAFD,CAIA,GAAMQ,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,MAAOX,CAAAA,MAAM,CAACY,GAAP,CAAW,SAACF,KAAD,CAAW,CAC3B,mBACE,YAEE,SAAS,uBAAiBX,UAAU,EAAI,kBAA/B,CAFX,CAGE,GAAG,WAAKT,OAAL,SACDS,UAAU,CAAGW,KAAK,CAACG,WAAT,CAAuBH,KAAK,CAACI,aADtC,CAHL,CAME,GAAG,CAAEJ,KAAK,CAACK,IANb,CAOE,OAAO,CAAE,yBAAMN,CAAAA,WAAW,CAACC,KAAD,CAAjB,EAPX,EACOA,KAAK,CAACM,EADb,CADF,CAWD,CAZM,CAAP,CAaD,CAdD,CAgBA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,oBAAKnB,KAAL,EADF,cAEE,YAAK,SAAS,CAAC,cAAf,UAA+Bc,YAAY,EAA3C,EAFF,CAGGT,UAAU,eACT,KAAC,OAAD,EACE,OAAO,CAAEA,UADX,CAEE,IAAI,CAAEX,cAFR,CAGE,SAAS,CAAC,cAHZ,EAJJ,GADF,CAaD,CA9CD,CAgDA,cAAeK,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YouTube from \"react-youtube\";\nimport tmdbApi from \"../axios\";\n\nimport { getYoutubeId } from \"../getYoutubeId\";\n\nimport \"../Row.css\";\n\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\nconst trailerOptions = {\n  height: \"390px\",\n  width: \"100%\",\n  playerVars: {\n    // https://developers.google.com/youtube/player_parameters\n    autoplay: 1,\n  },\n};\n\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await tmdbApi.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    };\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleClick = (movie) => {\n    getYoutubeId(movie, trailerUrl, setTrailerUrl);\n  };\n\n  const renderMovies = () => {\n    return movies.map((movie) => {\n      return (\n        <img\n          key={movie.id}\n          className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n          src={`${baseUrl}${\n            isLargeRow ? movie.poster_path : movie.backdrop_path\n          }`}\n          alt={movie.name}\n          onClick={() => handleClick(movie)}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">{renderMovies()}</div>\n      {trailerUrl && (\n        <YouTube\n          videoId={trailerUrl}\n          opts={trailerOptions}\n          className=\"row__trailer\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}