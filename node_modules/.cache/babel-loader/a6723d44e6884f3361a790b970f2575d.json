{"ast":null,"code":"import movieTrailer from\"movie-trailer\";export var getYoutubeId=function getYoutubeId(movie,trailerUrl,setTrailerUrl){if(trailerUrl){setTrailerUrl(\"\");}else{movieTrailer((movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.original_name)||(movie===null||movie===void 0?void 0:movie.title)).then(function(url){console.log(url);var urlParams=new URLSearchParams(new URL(url).search);setTrailerUrl(urlParams.get(\"v\"));}).catch(function(error){return console.log(error);});}};//  The movieTrailer library take a string and returns the path to the trailer (youtube)","map":{"version":3,"sources":["/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/src/getYoutubeId.js"],"names":["movieTrailer","getYoutubeId","movie","trailerUrl","setTrailerUrl","name","original_name","title","then","url","console","log","urlParams","URLSearchParams","URL","search","get","catch","error"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,eAAzB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,UAAR,CAAoBC,aAApB,CAAsC,CAChE,GAAID,UAAJ,CAAgB,CACdC,aAAa,CAAC,EAAD,CAAb,CACD,CAFD,IAEO,CACLJ,YAAY,CAAC,CAAAE,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEG,IAAP,IAAeH,KAAf,SAAeA,KAAf,iBAAeA,KAAK,CAAEI,aAAtB,IAAuCJ,KAAvC,SAAuCA,KAAvC,iBAAuCA,KAAK,CAAEK,KAA9C,CAAD,CAAZ,CACGC,IADH,CACQ,SAACC,GAAD,CAAS,CACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAMG,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoB,GAAIC,CAAAA,GAAJ,CAAQL,GAAR,EAAaM,MAAjC,CAAlB,CACAX,aAAa,CAACQ,SAAS,CAACI,GAAV,CAAc,GAAd,CAAD,CAAb,CACD,CALH,EAMGC,KANH,CAMS,SAACC,KAAD,QAAWR,CAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ,CAAX,EANT,EAOD,CACF,CAZM,CAcP","sourcesContent":["import movieTrailer from \"movie-trailer\";\n\nexport const getYoutubeId = (movie, trailerUrl, setTrailerUrl) => {\n  if (trailerUrl) {\n    setTrailerUrl(\"\");\n  } else {\n    movieTrailer(movie?.name || movie?.original_name || movie?.title)\n      .then((url) => {\n        console.log(url);\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      })\n      .catch((error) => console.log(error));\n  }\n};\n\n//  The movieTrailer library take a string and returns the path to the trailer (youtube)\n"]},"metadata":{},"sourceType":"module"}