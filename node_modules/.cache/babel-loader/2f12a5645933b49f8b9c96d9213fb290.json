{"ast":null,"code":"import movieTrailer from \"movie-trailer\";\nexport const getYoutubeId = (movie, trailerUrl, setTrailerUrl) => {\n  if (trailerUrl) {\n    setTrailerUrl(\"\");\n  } else {\n    movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name) || (movie === null || movie === void 0 ? void 0 : movie.title)).then(url => {\n      console.log(url);\n      const urlParams = new URLSearchParams(new URL(url).search);\n      setTrailerUrl(urlParams.get(\"v\"));\n    }).catch(error => console.log(error));\n  }\n}; //  The movieTrailer library take a string and returns the path to the trailer (youtube)","map":{"version":3,"sources":["/Users/GianMarco/Desktop/React experiments/netflix_clone_2/netflix_clone_2/src/getYoutubeId.js"],"names":["movieTrailer","getYoutubeId","movie","trailerUrl","setTrailerUrl","name","original_name","title","then","url","console","log","urlParams","URLSearchParams","URL","search","get","catch","error"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,UAAR,EAAoBC,aAApB,KAAsC;AAChE,MAAID,UAAJ,EAAgB;AACdC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAFD,MAEO;AACLJ,IAAAA,YAAY,CAAC,CAAAE,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,IAAP,MAAeH,KAAf,aAAeA,KAAf,uBAAeA,KAAK,CAAEI,aAAtB,MAAuCJ,KAAvC,aAAuCA,KAAvC,uBAAuCA,KAAK,CAAEK,KAA9C,CAAD,CAAZ,CACGC,IADH,CACSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAMG,SAAS,GAAG,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQL,GAAR,EAAaM,MAAjC,CAAlB;AACAX,MAAAA,aAAa,CAACQ,SAAS,CAACI,GAAV,CAAc,GAAd,CAAD,CAAb;AACD,KALH,EAMGC,KANH,CAMUC,KAAD,IAAWR,OAAO,CAACC,GAAR,CAAYO,KAAZ,CANpB;AAOD;AACF,CAZM,C,CAcP","sourcesContent":["import movieTrailer from \"movie-trailer\";\n\nexport const getYoutubeId = (movie, trailerUrl, setTrailerUrl) => {\n  if (trailerUrl) {\n    setTrailerUrl(\"\");\n  } else {\n    movieTrailer(movie?.name || movie?.original_name || movie?.title)\n      .then((url) => {\n        console.log(url);\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      })\n      .catch((error) => console.log(error));\n  }\n};\n\n//  The movieTrailer library take a string and returns the path to the trailer (youtube)\n"]},"metadata":{},"sourceType":"module"}