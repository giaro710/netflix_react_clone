{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/src/components/Banner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport tmdbApi from \"../axios\";\nimport requests from \"../requests\";\n\nconst Banner = () => {\n  _s();\n\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await tmdbApi.get(requests.fetchNetflixOriginals);\n      setMovie(Math.floor(Math.random() * request.data.results.length - 1));\n      return request;\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundSize: \"cover\",\n      backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}\")`\n      /*the ? needs to say: if there is no img d not freak out */\n      ,\n      backgroundPosition: \"center center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner__contents\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/src/components/Banner.js"],"names":["React","useState","useEffect","tmdbApi","requests","Banner","movie","setMovie","fetchData","request","get","fetchNetflixOriginals","Math","floor","random","data","results","length","backgroundSize","backgroundImage","backdrop_path","backgroundPosition"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAG,YAAY;AAC5B,YAAMC,OAAO,GAAG,MAAMN,OAAO,CAACO,GAAR,CAAYN,QAAQ,CAACO,qBAArB,CAAtB;AACAJ,MAAAA,QAAQ,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,OAAO,CAACM,IAAR,CAAaC,OAAb,CAAqBC,MAArC,GAA8C,CAAzD,CAAD,CAAR;AACA,aAAOR,OAAP;AACD,KAJD;;AAKAD,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,KAAK,EAAE;AACLU,MAAAA,cAAc,EAAE,OADX;AAELC,MAAAA,eAAe,EAAG,4CAA2Cb,KAA5C,aAA4CA,KAA5C,uBAA4CA,KAAK,CAAEc,aAAc;AAAI;AAFjF;AAGLC,MAAAA,kBAAkB,EAAE;AAHf,KAFT;AAAA,2BAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA9BD;;GAAMhB,M;;KAAAA,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport tmdbApi from \"../axios\";\nimport requests from \"../requests\";\n\nconst Banner = () => {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await tmdbApi.get(requests.fetchNetflixOriginals);\n      setMovie(Math.floor(Math.random() * request.data.results.length - 1));\n      return request;\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")` /*the ? needs to say: if there is no img d not freak out */,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        <h1></h1>\n      </div>\n\n      {/* title */}\n      {/* div with two buttons */}\n      {/* description */}\n    </header>\n  );\n};\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}