{"ast":null,"code":"import _regeneratorRuntime from\"/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import YouTube from\"react-youtube\";import tmdbApi from\"../axios\";import requests from\"../requests\";import{getYoutubeId}from\"../getYoutubeId\";import\"../Banner.css\";var trailerOptions={height:\"390px\",width:\"100%\",playerVars:{// https://developers.google.com/youtube/player_parameters\nautoplay:1}};var Banner=function Banner(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movie=_useState2[0],setMovie=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return tmdbApi.get(requests.fetchNetflixOriginals);case 2:request=_context.sent;setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length-1)]);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);var handleClick=function handleClick(){getYoutubeId(movie,trailerUrl,setTrailerUrl);};var truncate=function truncate(str,n){return(str===null||str===void 0?void 0:str.length)>n?str.substr(0,n-1)+\"...\":str;};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"header\",{className:\"banner\",style:{backgroundSize:\"cover\",backgroundImage:\"url(\\\"https://image.tmdb.org/t/p/original/\".concat(movie===null||movie===void 0?void 0:movie.backdrop_path,\"\\\")\")},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"banner__contents\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"banner__title\",children:(movie===null||movie===void 0?void 0:movie.title)||(movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.original_name)}),/*#__PURE__*/_jsxs(\"div\",{className:\"banner__buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleClick();},className:\"banner__button\",children:\"Play\"}),/*#__PURE__*/_jsx(\"button\",{className:\"banner__button\",children:\"My List\"})]}),/*#__PURE__*/_jsx(\"h1\",{className:\"banner__description\",children:truncate(movie===null||movie===void 0?void 0:movie.overview,150)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"banner--fadeBottom\"})]}),trailerUrl&&/*#__PURE__*/_jsx(YouTube,{videoId:trailerUrl,opts:trailerOptions,className:\"banner__trailer\"})]});};export default Banner;","map":{"version":3,"sources":["/Users/GianMarco/Desktop/React experiments/netflix_clone/netflix_clone/src/components/Banner.js"],"names":["React","useState","useEffect","YouTube","tmdbApi","requests","getYoutubeId","trailerOptions","height","width","playerVars","autoplay","Banner","movie","setMovie","trailerUrl","setTrailerUrl","fetchData","get","fetchNetflixOriginals","request","data","results","Math","floor","random","length","handleClick","truncate","str","n","substr","backgroundSize","backgroundImage","backdrop_path","title","name","original_name","overview"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YouTube from \"react-youtube\";\n\nimport tmdbApi from \"../axios\";\nimport requests from \"../requests\";\nimport { getYoutubeId } from \"../getYoutubeId\";\nimport \"../Banner.css\";\n\nconst trailerOptions = {\n  height: \"390px\",\n  width: \"100%\",\n  playerVars: {\n    // https://developers.google.com/youtube/player_parameters\n    autoplay: 1,\n  },\n};\n\nconst Banner = () => {\n  const [movie, setMovie] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await tmdbApi.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    };\n    fetchData();\n  }, []);\n\n  const handleClick = () => {\n    getYoutubeId(movie, trailerUrl, setTrailerUrl);\n  };\n\n  const truncate = (str, n) => {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  };\n\n  return (\n    <div>\n      <header\n        className=\"banner\"\n        style={{\n          backgroundSize: \"cover\",\n          backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n        }}\n      >\n        <div className=\"banner__contents\">\n          <h1 className=\"banner__title\">\n            {movie?.title || movie?.name || movie?.original_name}\n          </h1>\n          <div className=\"banner__buttons\">\n            <button onClick={() => handleClick()} className=\"banner__button\">\n              Play\n            </button>\n            <button className=\"banner__button\">My List</button>\n          </div>\n\n          <h1 className=\"banner__description\">\n            {truncate(movie?.overview, 150)}\n          </h1>\n        </div>\n\n        <div className=\"banner--fadeBottom\" />\n      </header>\n      {trailerUrl && (\n        <YouTube\n          videoId={trailerUrl}\n          opts={trailerOptions}\n          className=\"banner__trailer\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}